{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prashanth\\\\Downloads\\\\Prashanth\\\\lalith\\\\EventHub_MERN_Project_Local\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { TextField, Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('attendee');\n  const navigate = useNavigate();\n  const submit = async () => {\n    try {\n      const res = await API.post('/api/auth/register', {\n        name,\n        email,\n        password,\n        role\n      });\n      localStorage.setItem('token', res.data.token);\n      localStorage.setItem('user', JSON.stringify(res.data.user));\n      navigate('/');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      fullWidth: true,\n      sx: {\n        mt: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      fullWidth: true,\n      sx: {\n        mt: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      type: \"password\",\n      fullWidth: true,\n      sx: {\n        mt: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Role (attendee/organizer)\",\n      value: role,\n      onChange: e => setRole(e.target.value),\n      fullWidth: true,\n      sx: {\n        mt: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        mt: 2\n      },\n      onClick: submit,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Register, \"gmoftLGov8Zftj8QVXkaFrpEg4o=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","API","TextField","Button","Typography","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","name","setName","email","setEmail","password","setPassword","role","setRole","navigate","submit","res","post","localStorage","setItem","data","token","JSON","stringify","user","err","_err$response","_err$response$data","alert","response","message","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","fullWidth","sx","mt","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/prashanth/Downloads/Prashanth/lalith/EventHub_MERN_Project_Local/client/src/pages/Register.js"],"sourcesContent":["import React, {useState} from 'react';\nimport API from '../api';\nimport { TextField, Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Register(){\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('attendee');\n  const navigate = useNavigate();\n  const submit = async () => {\n    try {\n      const res = await API.post('/api/auth/register', { name, email, password, role });\n      localStorage.setItem('token', res.data.token);\n      localStorage.setItem('user', JSON.stringify(res.data.user));\n      navigate('/');\n    } catch (err) {\n      alert(err.response?.data?.message || err.message);\n    }\n  };\n  return (\n    <>\n      <Typography variant=\"h5\">Register</Typography>\n      <TextField label=\"Name\" value={name} onChange={e=>setName(e.target.value)} fullWidth sx={{mt:2}}/>\n      <TextField label=\"Email\" value={email} onChange={e=>setEmail(e.target.value)} fullWidth sx={{mt:2}}/>\n      <TextField label=\"Password\" value={password} onChange={e=>setPassword(e.target.value)} type=\"password\" fullWidth sx={{mt:2}}/>\n      <TextField label=\"Role (attendee/organizer)\" value={role} onChange={e=>setRole(e.target.value)} fullWidth sx={{mt:2}}/>\n      <Button variant=\"contained\" sx={{mt:2}} onClick={submit}>Register</Button>\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}