{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prashanth\\\\Downloads\\\\Prashanth\\\\lalith\\\\EventHub_MERN_Project_Local\\\\client\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typography, TextField, Button } from '@mui/material';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const stored = JSON.parse(localStorage.getItem('user') || 'null');\n  const [user, setUser] = useState(stored);\n  const [name, setName] = useState((user === null || user === void 0 ? void 0 : user.name) || '');\n  const [email, setEmail] = useState((user === null || user === void 0 ? void 0 : user.email) || '');\n  const save = async () => {\n    // For simplicity, only update name in local storage. Implement API update if needed.\n    const updated = {\n      ...user,\n      name,\n      email\n    };\n    localStorage.setItem('user', JSON.stringify(updated));\n    setUser(updated);\n    alert('Profile updated locally (extend backend to persist)');\n  };\n  if (!user) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Please log in\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      fullWidth: true,\n      sx: {\n        mt: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      fullWidth: true,\n      sx: {\n        mt: 2\n      },\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 2\n      },\n      children: [\"Role: \", user.role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        mt: 2\n      },\n      onClick: save,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Profile, \"k4TNCQ1nwx0b7LVqW5YECtlLAsQ=\");\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","Typography","TextField","Button","API","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","stored","JSON","parse","localStorage","getItem","user","setUser","name","setName","email","setEmail","save","updated","setItem","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","label","value","onChange","e","target","fullWidth","sx","mt","disabled","role","onClick","_c","$RefreshReg$"],"sources":["C:/Users/prashanth/Downloads/Prashanth/lalith/EventHub_MERN_Project_Local/client/src/pages/Profile.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { Typography, TextField, Button } from '@mui/material';\nimport API from '../api';\n\nexport default function Profile(){\n  const stored = JSON.parse(localStorage.getItem('user')||'null');\n  const [user, setUser] = useState(stored);\n  const [name, setName] = useState(user?.name||'');\n  const [email, setEmail] = useState(user?.email||'');\n\n  const save = async () => {\n    // For simplicity, only update name in local storage. Implement API update if needed.\n    const updated = { ...user, name, email };\n    localStorage.setItem('user', JSON.stringify(updated));\n    setUser(updated);\n    alert('Profile updated locally (extend backend to persist)');\n  };\n\n  if(!user) return <Typography>Please log in</Typography>;\n  return (\n    <>\n      <Typography variant=\"h5\">Profile</Typography>\n      <TextField label=\"Name\" value={name} onChange={e=>setName(e.target.value)} fullWidth sx={{mt:2}}/>\n      <TextField label=\"Email\" value={email} onChange={e=>setEmail(e.target.value)} fullWidth sx={{mt:2}} disabled/>\n      <Typography sx={{mt:2}}>Role: {user.role}</Typography>\n      <Button variant=\"contained\" sx={{mt:2}} onClick={save}>Save</Button>\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}